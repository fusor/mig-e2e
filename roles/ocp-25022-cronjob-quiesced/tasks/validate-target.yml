- name: check the migmigration running status 
  k8s_facts:
    api_version: migration.openshift.io/v1alpha1 
    kind: MigMigration 
    namespace: "{{ migration_namespace }}"
    field_selectors:
      - metadata.name={{ metadata }}
  register: mig_result 
  until: "mig_result.resources[0].status.conditions.message is The migration has completed successfully."  
  retries: 30


- name: check cronjob status in target cluster {{ migcluster_target_name }}
  k8s_facts:
    api_version: batch/v1beta1
    kind: CronJob 
    namespace: "{{ migration_sample_name }}"
  register:  cronjob_info 
  until: cronjob_info.resources | length > 0
  retries: 30
 
- debug:
    msg: "{{ cronjob_info }}"  

- name: sleep 1 minute to wait cron job to run
  shell: sleep 60

- name: Check app {{ app_name }} pod status
  k8s_facts:
    api_version: v1 
    kind: Pod
    namespace: "{{ migration_sample_name }}"
    label_selectors: "cronowner={{ app_name }}"
    field_selectors: 
    - status.phase=Succeeded
  register: pod
  until: pod.resources | length > 0
  retries: 30

- debug:
    msg: "{{ pod }}"

- name: get  the lof of cron job
  shell: oc logs $(oc get pod -n cronquiesced-test|grep Completed|tail -1|awk '{print $1}')
  register: cronjob_log

- debug:
    msg: "{{ cronjob_log }}"

- name: set expected log string
  set_fact:
     expected_log_str: "Hello! from namespace{{ migration_sample_name }} while using image {{ docker_image }}"

- name: check the log of cron job
   fail:
     msg: "the log of cron job is wrong"
   when: "expected_log_str not in cronjob_log.stdout"

#TODO: when possible, check that original cronjobs have not been quiesced.

